Examples on some of the electronics needed for this project will be added here.
All of the schematics are not available in electronic form. 

At least the reference noise switching circuit & firmware is still missing. 
In our setup, this is implemented with the 2$ STM32F103C8T6 (a.k.a "Blue Pill") µC. 
This was (audaciously) edited from a CDCACM-device example code in libopencm3 examples 
to respond to a certain character ('X', could be anything and even include more functionality 
- too busy to do anything more) to control a GPIO pin. That is, the USB-enabled µC maps to 
a modem device, e.g. /dev/ttyACM0 (add your user to the dialout group for access), which you 
then send characters to enable/disable a high-side power switch, which drives the noise amps.
One could also include a udev rule to command your host computer to not treat it as a modem, but
it works fine without it after the initial AT-command garbage stops. Our setup also includes an 
indicator led (+a driver circuit) to observe the reference noise state.


Brief descriptions:

example_noisegen:
	Kicad project for 3+1  output reference noise generator. Drives 3 couplers, 
	one directionally coupled for reference dongle. Separate power connectors
	for the MMIC amplifier chain and Zener diode. Optional enable signal for
	diode current (bypassed in prototype build). Our design switches the noise
	by disabling the operating voltage on the MMIC amps.

	The output connectors should be changed to MCX, currently they are MMCX.
	Also, an updated PCB version for 8 outputs with 'almost proper' Wilkinson power dividers
	is half done, but still somewhat unfinished for being uploaded here (as if anything
	here is finished/mature). Currently, I'm burdened with writing articles.

clock_generator:
	The clock generator (no complete schematic for this currently), is a buffered 
	Pierce-type oscillator. Uses 74HC04 and 74HC14 (Schmidt trigger) inverters. See
	example_clock. The Schmidt trigger (for reducing noise) is not strictly necessary 
	and could be replaced by 74HC04, or alternatively a single Schmidt trigger followed 
	by 74HC04 buffers.


coupler module for 7 receivers:
	The reference noise is distributed to the receivers via directional coupling.
	Check the .jpg for the idea: here the top PCB is a D-Link USB hub.
	
	Published with permission from Tejeez: coupler.zip & adapter.zip contain the 
	plotted gerber files for a 7-element coupler PCB assembly. You will also need 
	a suitable 7-port HUB, some SMD caps & resistors, inductor and MCX & angled 
	BNC connectors. Also, pin header connectors between adapter and coupler boards. 
	A crude BOM and component values:
	
	P1,P3,P5,P7,P9,P11,P13 : MCX STRAIGHT PLUG (Farnell 1831741)
	P2,P4,P6,P8,P10,P12,P14: ANGLED BNC (Tyco electronics)
	
	R1-R8: 51 Ohm, 1206? (need to verify footprint size)
	C1-C7: 1nF 1206
	L1:    220 nH (Farnell 2470315: this inductor is too small, 
		       painful to solder, get one with larger footprint)
	
	C8-C9: 22pF, 1nF
	
	C11-C18: (caps to chassis GND) are not strictly necessary.
	
	P22: 15 X 2 pin header (2.54mm pitch, straight) connects to adapter
	
	adapter:
	C10: 1uF, 0805 (in adapter board, power source filter)
	15 X 2 pin connector (straight, 2.54mm)
	micro-USB B connector
	 
	To improve robustness, RF-switch ICs could be used instead of directional coupling 
	to perform this function. A strong signal from the antennas on the frequency of 
	interest might interfere with the synchronization in the current coupling approach.

